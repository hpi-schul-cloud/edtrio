# import Document, User, MultipleChoiceAnswer, MultipleChoiceSubmission, DocumentSubscriptionPayload from "./database/generated/prisma.graphql"
scalar Json

type Query {
  document(documentId: String!): Document
  documents: [Document]
  user(userId: String!): User
  users: [User]
  multipleChoiceAnswer(answerId: String!): MultipleChoiceAnswer
  multipleChoiceSubmission(submissionId: String!): MultipleChoiceSubmission
  multipleChoiceSubmissions(answerId: String!): [MultipleChoiceSubmission]
  submissionByUser(answerId: String!, userId: String!): MultipleChoiceSubmission
  poll(pollId: String!): Poll
  pollAnswer(pollAnswerId: String!): PollAnswer
}

type Mutation {
  createUser(name: String!, isTeacher: Boolean!): User
  createDocument(value: Json!, userIds: [String!]!): Document
  updateDocument(documentId: String!, value: Json, userIds: [String!]): Document
  createMultipleChoiceAnswer(isCorrect: Boolean!): MultipleChoiceAnswer
  updateMultipleChoiceAnswer(
    answerId: String!
    isCorrect: Boolean!
  ): MultipleChoiceAnswer
  addMultipleChoiceSubmissionToAnswer(
    answerId: String!
    submissionId: String!
  ): MultipleChoiceAnswer
  createMultipleChoiceSubmission(
    isChecked: Boolean!
    userId: String!
    answerId: String!
  ): MultipleChoiceSubmission
  updateMultipleChoiceSubmission(
    submissionId: String!
    isChecked: Boolean!
  ): MultipleChoiceSubmission
  deleteMultipleChoiceAnswer(answerId: String!): MultipleChoiceAnswer
  deleteMultipleChoiceSubmission(submissionId: String): MultipleChoiceSubmission
  createDocument(value: String!, userIds: [String!]!): Document
  updateDocument(
    documentId: String!
    value: String!
    userIds: [String!]!
  ): Document
  createPoll(votingAllowed: Boolean!, displayResults: Boolean!): Poll
  deletePoll(pollId: String!): Poll
  updatePoll(
    pollId: String!
    votingAllowed: Boolean
    displayResults: Boolean
  ): Poll
  createPollAnswer(pollId: String!): PollAnswer
  deletePollAnswer(pollAnswerId: String!): PollAnswer
  addSubmissionToPollAnswer(pollAnswerId: String!, userId: String!): PollAnswer
}

type Subscription {
  valueChanged(documentId: String!): Document
  pollChanged(pollId: String!): Poll
}
